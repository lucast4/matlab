function [falloff,avgnn,ss,num]=jc_contingency(norm,chspec,BarHeight,)
%%%Calibrate 10ms period
if chspec==0
    width=round(10*(44100/(4*1000)));
else
    width=(10*(32000/(4*1000)));
end

%%%%Assign the contingency to this region:
center=mean(firstpoint,lastpoint);
for i=1:size(norm,2)
    mm(i)=mean(norm(firstpoint:lastpoint,i));
end
ss=std(mm);

%Contingency
if strcmp(contingency,'above')
    count=1;
    %%%Above contingency
    for i=1:size(norm,2)
        if mm(i)>stds*ss
            nn(:,count)=norm(:,i);
            count=count+1;
        end
    end
else
    count=1;
    %%%Below contingency
    for i=1:size(norm,2)
        if mm(i)<-stds*ss
            nn(:,count)=norm(:,i);
            count=count+1;
        end
    end
end

num=count-1;
for i=1:length(nn)
    avgnn(i)=mean(nn(i,:));
end

%%%%%%%%%%Previous Output Attempts%%%%%%%%%%%%
%avgchop=avgnn(150:length(avgnn));
%hhTime=60+find(avgchop>(min(avgnn(60:100))+0.01),1,'first');
%hhTime=150+find(avgchop<(avgnn(150)-0.01),1,'first');

%Output
falloff=(abs(avgnn(center))-abs(avgnn(center+width)+avgnn(center-width))/2)/abs(avgnn(center));




    