%This will be multiunit.m
%The idea here will be to go through and plot every data file, removing
%obvious movement artifact.

%I need to open the data file, plot it, and decide whether to keep it.


%What I would like to do is add more points to existing cluster with two
%different colors.  One color for all previous points, another color for
%all new points.

%And that when I change the cluster dimension.  It does so for all the
%points.


%modified from doit5 to cluster n clusters at once.

%initialize variables
clear multimat;
clear fnm;
clear finalmean;

cnt=0;
sr=200;
prebuff=2;
postbuff=1;
rawwav='/cobain3/twarren/w90o24e2/9024.wav';

batchfile='batcht'
%outfilefilter={'D:\tim\b3b4\exp2stimuli\34.wav' 'D:\tim\b3b4\exp2stimuli\34rev.wav' 'D:\tim\b3b4\exp2stimuli\34m10.wav'}
%numstim=length(outfilefilter);
numstim=3
for ii=1:10
    
        multimat{ii}=[];
    
end

%colorlist={'r' 'g' 'b'}
stimnames={'bos' 'rev' 'm10'}


subplotvals=[3:2+numstim]
splen=numstim+2;


tet_chans=[2:5];song_chan=1;
d_fs=1000;  %samples per second after resampling  
smooth_win=5;

%get all the files in the batch file
fid=fopen(batchfile,'r');
while (1)
	fn=fgetl(fid);
	if (~ischar(fn))
		break;
	end
	if (~exist(fn,'file'))
		continue;
	end
	
	cnt=cnt+1;
	fnm{cnt}=fn;
end
fclose(fid);

% this goes through and gets the main spike cluster for each file in the
%batch file

%This loops through all the files in the batch file
for ifn=1:length(fnm)
    clear smooth;
    clear filtdata;
    clear outdata;
    clear finaldata;
    
    fn=fnm{ifn};
    %run tetanal on the file get spike times and spkamps
	fn
    rd=readrecf(fn);
    %read in data
    if(isempty(rd)==0)
        [data,fs]=tetanaldcns(fn,-2000,song_chan,tet_chans);
    
    %This loop assigns data to appropriate data structure
        inputnum=0;
    
        for ii=1:length(outfilefilter) 
            if (strcmp(rd.outfile,outfilefilter{ii}))
                inputnum=ii;
                break;
            
            %This is in the case that the stimulus isn't one of the ones
            %desired
            else
                inputnum=4;
            end
            
       end

    
   % pltdat;
    
    
    
    %R=input('Keep data? 1 for Yes')
    %if (R==1)
            filtdata=data(:,2); 
            filtdata=abs(filtdata);
   
          len=round(fs*smooth_win/1000);                      
            h=ones(1,len)/len;
            for ii=1:1
                smooth(:,ii)=conv(h, filtdata(:,ii));
                offset=round((length(smooth(:,ii))-length(filtdata(:,ii)))/2); %get rid of convolution induced offset
                vec=offset:length(filtdata(:,ii))+offset;
                outdata(:,ii)=smooth(vec,ii);
            
            
            end
        %resample
            step=round(fs/d_fs);
            d_fs=fs/step;
        
            for ii=1
                finaldata(:,ii)=resample(filtdata(:,ii),sr,32000);
            end    
        
            if(ifn==1)
                    canlength=length(finaldata(:,1));
            else
               diff=length(finaldata(:,ii))-canlength;
                if(abs(diff)<.1*canlength)
                    %too long
                    if(diff>=0)
                        finaldata=finaldata(1:(length(finaldata)-diff),:);
                    else
                        finaldata=[finaldata;zeros(-diff,1)];
            
                    end
                end
            end

            for ii=1:1
                        multimat{inputnum}=[multimat{inputnum} finaldata(:,ii)];
           
                     end

        
                
                
                    
        
        
    end

    %end
end


%Then what you can do is look at the mean multiunit response for the song
%before *and* after. By collapsing across all time and normalizing.  For
%different stimuli....
for ii=1:numstim
    finalmean{ii}=mean(multimat{ii},2);
end

figure
matlength=length(multimat{1}(:,1))
newsr=200;
vec=[0:1:(matlength-1)]/newsr;

colordef white



ax(1:2)=subplot(splen,1,1:2);
   if(~exist('rawsong'))
        [rawsong]=wavread(rawwav);
    end
    
        [sm,sp,t,f]=evsmooth(rawsong,44100,0.01);
        imagesc(t,f,log(abs(sp)));syn;ylim([0,1e4]);
        box off;
        axis off;
    end



for kk = 1:numstim%length(stimf)
	
    
    
    
    
        ax(subplotvals(kk))=subplot(splen,1,subplotvals(kk));	
        xv=vec;
		yv=finalmean{kk};
		maxtrial(kk)=max(yv);
        
        
        plot(xv,yv,['-']);
        
        ylabel(stimnames{kk},'Fontsize',16);
        
         ylabel(stimnames{kk},'Fontsize',16);
        
        
        
          set(gca,'XTickLabel',[]);
          set(gca,'Xtick',[]);
          if (kk~=length(numstim))
           set(gca,'YTickLabel',[]);
           set(gca,'Ytick',[]); 
        
          end    

        if(kk==length(numstim))
              %xlabel('Time (s)');
              %set(gca,'Fontsize', 14);
             % set(gca,'XTickLabel')
          end
end 
        
    %      set(gca,'XTickLabel',[]);
     %     set(gca,'Xtick',[]);
      %    if (kk~=length(snums))
       %    set(gca,'YTickLabel',[]);
        %   set(gca,'Ytick',[]); 
        %end    
%end



%This is to scale the data correctly.
for kk=1:numstim
    %ax(subplotvals(kk))=
    subplot(splen,1,subplotvals(kk));
    hold on;
    maxval=max(maxtrial);
    %plot(0:.1:canlength, maxval/2, 'r--')
    
    axis([0 canlength/sr 0 maxval]);
end

