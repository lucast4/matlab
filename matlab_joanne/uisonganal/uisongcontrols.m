function [h_print, h_scale, h_edit, h_label] = uisongcontrols(action)

%build uicontrols
%set this up so everything is called here
%first initialize
%dont always save notefile in make-current
%make different actions (labeling/editing mutually exclusive
%fix highlight


%global variables
global onsets offsets labels Fs sm_win threshold min_int min_dur
global get_next interact
global soundfile path_notefile save_notes


if strcmp(action,'initialize')  

  %button parameters
   but_width = .03;
   but_height = .04;
   left_bord = .01;
   top_bord = .01;
   
  %control positions
   print_position = [left_bord 1-top_bord-but_height but_width but_height];
   scale_position = [left_bord 1-2*top_bord-2*but_height but_width but_height];
   edit_position = [left_bord 1-3*top_bord-3*but_height but_width but_height];
   label_position = [left_bord 1-4*top_bord-4*but_height but_width but_height];
   zoom_x_position = [left_bord 1-5*top_bord-5*but_height but_width but_height];
   zoom_y_position = [left_bord 1-6*top_bord-6*but_height but_width but_height];
   unzoom_x_position = [left_bord 1-7*top_bord-7*but_height but_width but_height];
   unzoom_y_position = [left_bord 1-8*top_bord-8*but_height but_width but_height];
   resegment_position = [left_bord 1-9*top_bord-9*but_height but_width but_height];
   move_left_position = [left_bord 1-10*top_bord-10*but_height but_width but_height];
   move_right_position = [left_bord 1-11*top_bord-11*but_height but_width but_height];
   next_position = [left_bord 1-12*top_bord-12*but_height but_width but_height];
   close_position = [left_bord 1-13*top_bord-13*but_height but_width but_height];
   batch_position = [left_bord 1-14*top_bord-14*but_height but_width but_height];
   psd_position = [left_bord 1-15*top_bord-15*but_height but_width but_height];

  %-------------------------------------------------------------
  %  print button
  %-------------------------------------------------------------
     h_print = uicontrol(gcf,...
                    'style','pushbutton',...
                    'units','normalized',...
                    'position', print_position,...
                    'string','p',...
		    'TooltipString', 'Print',...
                    'callback','make_current(get(0,''pointerwindow''),1); print_song');

  %-------------------------------------------------------------
  %  scale button 
  %-------------------------------------------------------------
    h_scale = uicontrol(gcf,...
                    'style','pushbutton',...
                    'units','normalized',...
                    'position',scale_position,...
                    'string','s',...
		    'TooltipString', 'Scale',...
                    'callback','make_current(get(0,''pointerwindow''),1); uiscale');

  %-------------------------------------------------------------
  % edit button 
  %-------------------------------------------------------------
    h_edit = uicontrol(gcf,...
                    'style','pushbutton',...
                    'units','normalized',...
                    'position',edit_position,...
                    'string','e',...
		    'TooltipString', 'Edit notes',...
                    'callback',['make_current(get(0,''pointerwindow''),1);',...
                                'edit_note;']);

  %-------------------------------------------------------------
  % label button 
  %-------------------------------------------------------------
    h_label = uicontrol(gcf,...
                    'style','pushbutton',...
                    'units','normalized',...
                    'position',label_position,...
                    'string','l',...
		    'TooltipString', 'Label notes',...
                    'callback','uisongcontrols(''label'')');
                                  

  %-------------------------------------------------------------
  % zoom_x button 
  %-------------------------------------------------------------
    h_zx = uicontrol(gcf,...
                    'style','pushbutton',...
                    'units','normalized',...
                    'position',zoom_x_position,...
                    'string','zx',...
		    'TooltipString', 'Zoom X',...
                    'callback','make_current(get(0,''pointerwindow''),1); uizoom(''x'')');

  %-------------------------------------------------------------
  % zoom_y button 
  %-------------------------------------------------------------
    h_zy = uicontrol(gcf,...
                    'style','pushbutton',...
                    'units','normalized',...
                    'position',zoom_y_position,...
                    'string','zy',...
		    'TooltipString', 'Zoom Y',...
                    'callback','make_current(get(0,''pointerwindow''),1); uizoom(''y'')');

  %-------------------------------------------------------------
  % unzoom_x button 
  %-------------------------------------------------------------
    h_ux = uicontrol(gcf,...
                    'style','pushbutton',...
                    'units','normalized',...
                    'position',unzoom_x_position,...
                    'string','ux',...
		    'TooltipString', 'Unzoom X',...
                    'callback','make_current(get(0,''pointerwindow''),1); uizoom(''ux'')');

  %-------------------------------------------------------------
  % unzoom_y button          	  
  %-------------------------------------------------------------
    h_uy = uicontrol(gcf,...
                    'style','pushbutton',...
                    'units','normalized',...
                    'position',unzoom_y_position,...
                    'string','uy',...
		    'TooltipString', 'Unzoom Y',...
                    'callback','make_current(get(0,''pointerwindow''),1); uizoom(''uy'')');

  %-------------------------------------------------------------
  % resegment button 
  %-------------------------------------------------------------
    h_resegment = uicontrol(gcf,...
                    'style','pushbutton',...
                    'units','normalized',...
                    'position', resegment_position,...
                    'string','r',...
		    'TooltipString', 'Resegment notes',...
                    'callback','make_current(get(0,''pointerwindow''),2); uiresegment');

  %-------------------------------------------------------------
  % move left button 
  %-------------------------------------------------------------
    h_mv_left = uicontrol(gcf,...
                    'style','pushbutton',...
                    'units','normalized',...
                    'position', move_left_position,...
                    'string','<<',...
		    'TooltipString', 'Scroll left',...
                    'callback','make_current(get(0,''pointerwindow''),1); uimove(''left'')');


  %-------------------------------------------------------------
  % move right button 
  %-------------------------------------------------------------
    h_mv_right = uicontrol(gcf,...
                    'style','pushbutton',...
                    'units','normalized',...
                    'position', move_right_position,...
                    'string','>>',...
		    'TooltipString', 'Scroll right',...
                    'callback','make_current(get(0,''pointerwindow''),1); uimove(''right'')');


  %-------------------------------------------------------------
  % next button 
  %-------------------------------------------------------------
  %make current always saves current notedata, so next saves data before opening new window
    h_next = uicontrol(gcf,...
                    'style','pushbutton',...
                    'units','normalized',...
                    'position', next_position,...
                    'string','n',...
		    'TooltipString', 'Next song file',...
                    'callback','uisongcontrols(''next'')');


  %-------------------------------------------------------------
  % close button 
  %-------------------------------------------------------------
  %make current always saves current notedata, so close saves data before closing window
    h_close = uicontrol(gcf,...
                    'style','pushbutton',...
                    'units','normalized',...
                    'position', close_position,...
                    'string','c',...
		    'TooltipString', 'Close',...
                    'callback','uisongcontrols(''close'')');
                    
                    
                    
  %-------------------------------------------------------------
  % batch button 
  %-------------------------------------------------------------
  
    h_batch = uicontrol(gcf,...
                    'style','pushbutton',...
                    'units','normalized',...
                    'position', batch_position,...
                    'string','b',...
		    'TooltipString', 'Batch',...
                    'callback','uisongcontrols(''batch'')');
                                        
                    
 %-------------------------------------------------------------
  % psd button 
  %-------------------------------------------------------------
  
    h_psd = uicontrol(gcf,...
                    'style','pushbutton',...
                    'units','normalized',...
                    'position', psd_position,...
                    'string','p',...                    
		    'TooltipString', 'PSD analysis',...
 		    'callback','make_current(get(0,''pointerwindow''),1); uipsdanal');

elseif strcmp(action,'label')
   make_current(get(0,'pointerwindow'),1);
   label(onsets, offsets);

elseif strcmp(action,'next')
   make_current(get(0,'pointerwindow'),1);
   
   
   %save data from the current window if save flag is set to 1
   if save_notes==1
     if (ischar(soundfile) & ~isempty(soundfile) & ~isspace(soundfile) )
       note_file=[soundfile,'.not.mat'];
       save_data(note_file, path_notefile, Fs, onsets, offsets, labels, threshold, min_int, min_dur, sm_win); 
     end
   end
   %set next flag
   get_next = 1; 

elseif strcmp(action,'close')
   make_current(get(0,'pointerwindow'),1);
   %save data from the current window if save_notes=1
   if save_notes==1
     if (ischar(soundfile) & ~isempty(soundfile) & ~isspace(soundfile) )
       note_file=[soundfile,'.not.mat'];
       save_data(note_file, path_notefile, Fs, onsets, offsets, labels, threshold, min_int, min_dur, sm_win); 
     end
   end
   %close window
   close(gcf);
   
elseif strcmp(action,'batch')
   make_current(get(0,'pointerwindow'),1);
   %save data from the current window if save_notes=1
   if save_notes==1
     if (ischar(soundfile) & ~isempty(soundfile) & ~isspace(soundfile) )
       note_file=[soundfile,'.not.mat'];
       save_data(note_file, path_notefile, Fs, onsets, offsets, labels, threshold, min_int, min_dur, sm_win); 
     end
   end
   interact = batch_setup;
   
end

