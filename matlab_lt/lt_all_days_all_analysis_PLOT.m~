%% LT 12/9/13 - to plot data compiled previously in lt_all_days_all_analysis, which compiles all analyses into one strucure.
%% LT 3/14/14 - added all_trans plotting

%% PLOT changes to transitions, using all_trans data.
close all
clear all
load all_days_all_analysis_14Mar2014_1809_CPseq_AllTrans

% FIRST, plotting heat map of change (rel to baseline) for every sun
% transition, across days.

% first, figure out the syllables that were sang every day.
days_with_analysis=[];
for i=1:size(all_days_all_analysis.data,2);
    if ~isempty(all_days_all_analysis.data{i});
        days_with_analysis=[days_with_analysis i];
    end
end

num_of_days=length(days_with_analysis);

for j=1:num_of_days;
    syl_labels_concatenated{j}=all_days_all_analysis.data{days_with_analysis(j)}.all_songs.all_trans.summary.syl_labels_in_order;
end

[common_syls syl_indices]=mintersect_array(syl_labels_concatenated); % find common syls and their indices in each day

% get baseline
baseline_days=[1 2 3]; %in 1,2,3,... indices, not days with gaps.
clear dummy
for j=1:length(baseline_days);
    dummy(:,:,j)=all_days_all_analysis.data{baseline_days(j)}.all_songs.all_trans.summary.divergence.matrix_of_fractions(syl_indices{j},syl_indices{j});
end
all_days_all_analysis.PLOT.all_trans.difference_matrices.divergence.baseline=mean(dummy,3);


for i=1:num_of_days;
    all_days_all_analysis.PLOT.all_trans.difference_matrices.divergence.all_days_incl_pre(:,:,days_with_analysis(i))=...
        all_days_all_analysis.data{days_with_analysis(i)}.all_songs.all_trans.summary.divergence.matrix_of_fractions(syl_indices{i},syl_indices{i})...
        -all_days_all_analysis.PLOT.all_trans.difference_matrices.divergence.baseline;
end

% convert from fraction to percent
all_days_all_analysis.PLOT.all_trans.difference_matrices.divergence.all_days_incl_pre=... 
    100*all_days_all_analysis.PLOT.all_trans.difference_matrices.divergence.all_days_incl_pre
all_days_all_analysis.PLOT.all_trans.difference_matrices.divergence.baseline=...
    100*all_days_all_analysis.PLOT.all_trans.difference_matrices.divergence.baseline;

% plot
if num_of_days<6;
    row_plots=min(ceil(num_of_days+1)/2,4);
elseif num_of_days>5;
    row_plots=4;
end
col_plots=ceil((num_of_days+1)/row_plots);
  
figure;
    syl_num=size(common_syls,2);
    syl_labels=common_syls;
    
%PLOT THE BASELINE FRACTION MATRIX
subplot(col_plots,row_plots,1);
syl_mat = all_days_all_analysis.PLOT.all_trans.difference_matrices.divergence.baseline;
imagesc(syl_mat);
colormap(flipud(gray))
textStrings = num2str(syl_mat(:),'%0.2f');
textStrings = strtrim(cellstr(textStrings));
[x,y]=meshgrid(1:syl_num);
hStrings = text(x(:),y(:),textStrings(:), 'HorizontalAlignment','center');
midValue = mean(get(gca,'CLim'));
textColors = repmat(syl_mat(:) > midValue,1,3);
set(hStrings,{'Color'},num2cell(textColors,2));
set(gca,'XTick',1:syl_num,'XTickLabel',syl_labels, 'YTick',1:syl_num,...
    'YTickLabel',syl_labels, 'TickLength',[0 0]);
ylabel('transition from:')
xlabel('transition to:')
title('\bf Baseline fractions (mean)');
freezeColors

    
% determine a common grayscale across all days - normalize by max element
% out of entire matrix
max_value=max(max(max(all_days_all_analysis.PLOT.all_trans.difference_matrices.divergence.all_days_incl_pre)));
min_value=min(min(min(all_days_all_analysis.PLOT.all_trans.difference_matrices.divergence.all_days_incl_pre)));
absolute_max=max(min_value,max_value);

% grayscale=[hot(100); flipud(cool(100))]; 
% grayscale=cool(200)
    
colorscale = [flipud([0.01:0.01:1; zeros(1,100); zeros(1,100)]'); [zeros(1,100); zeros(1,100); 0.01:0.01:1]']; 


%PLOT THE DIFFERENCE MATRICES
for i=1:num_of_days;
    subplot(col_plots,row_plots,i+1);
    syl_mat = all_days_all_analysis.PLOT.all_trans.difference_matrices.divergence.all_days_incl_pre(:,:,days_with_analysis(i));
    max_value_local=max(max(all_days_all_analysis.PLOT.all_trans.difference_matrices.divergence.all_days_incl_pre(:,:,days_with_analysis(i))));
    min_value_local=min(min(all_days_all_analysis.PLOT.all_trans.difference_matrices.divergence.all_days_incl_pre(:,:,days_with_analysis(i))));
    imagesc(syl_mat,[-absolute_max absolute_max]);
%     colormap(grayscale(50+floor(min_value/2):50+ceil(max_value/2),:,:)); colorbar;
    colormap(colorscale); 
%     if i==num_of_days;
%         h_bar=colorbar; 
%     end
    textStrings = num2str(syl_mat(:),'%0.0f');
    textStrings = strtrim(cellstr(textStrings));
    [x,y]=meshgrid(1:syl_num);
    hStrings = text(x(:),y(:),textStrings(:), 'HorizontalAlignment','center');
%     midValue = mean(get(gca,'CLim'));
    textColors = repmat(syl_mat(:) > max_value/4,1,3)+repmat(syl_mat(:) < min_value/4,1,3); %only put in text of those that are past 1/4 of max diff value.
    set(hStrings,{'Color'},num2cell(textColors,2));
%     set(hStrings,{'Color'},{'w'})
    set(gca,'XTick',1:syl_num,'XTickLabel',syl_labels, 'YTick',1:syl_num,...
        'YTickLabel',syl_labels, 'TickLength',[0 0]);
    ylabel('transition from:')
    xlabel('transition to:')
    title(['day # ' num2str(days_with_analysis(i)) ', ' all_days_all_analysis.data{days_with_analysis(i)}.date]);
    freezeColors
end


% make one colorbar
ax=gca;
pos=get(gca,'pos'); % to arrange colorbar relative to the last plot
% set(gca,'pos',[pos(1) pos(2) pos(3)*0.95 pos(4)]);
% pos=get(gca,'pos');
% hc=colorbar('position',[pos(1) pos(2) pos(3) 0.5*pos4]);
hc=colorbar('position',[pos(1)+1.2*pos(3) pos(2)+(0.2*pos(4)) 0.05*pos(3) 0.7*pos(4)]);
% hc=colorbar('location','eastoutside')
% set(hc,'xaxisloc','top');


% give a general title
ha = axes('Position',[0 0 1 1],'Xlim',[0 1],'Ylim',[0 1],'Box','off','Visible','off','Units','normalized', 'clipping' , 'off');
text(0.5, 1,['\bf Divergent transitions: difference from baseline (first ' num2str(max(baseline_days)) ' days)'],'HorizontalAlignment'...
,'center','VerticalAlignment', 'top')

all_days_all_analysis.PLOT.all_trans.difference_matrices.common_syls=common_syls;
all_days_all_analysis.PLOT.all_trans.difference_matrices.syl_indices=syl_indices;

%% PLOT OVER DAYS, any type of analysis.
close all
analysis_type='gap_duration';
first_day_num=datenum(all_days_all_analysis.parameters.first_day);

if strcmp(analysis_type,'gap_duration')==1;
    transitions=all_days_all_analysis.parameters.gap_duration.transitions;
    
    for j=1:length(transitions);
        figure(j); hold on;
        for i=1:length(all_days_all_analysis.data); % number of days
            try
                num_of_renditions=length(all_days_all_analysis.data{i}.all_songs.(transitions{j}).gap_duration);
                scatter(i-1.25+[1:num_of_renditions]./(2*num_of_renditions),all_days_all_analysis.data{i}.all_songs.(transitions{j}).(analysis_type),'b');
            catch err
                continue
            end
        end
        
        % Put in medians, std
        for i=1:length(all_days_all_analysis.data); % number of days
            try
                errorbar(i-1,median(all_days_all_analysis.data{i}.all_songs.(transitions{j}).(analysis_type)),...
                    std(all_days_all_analysis.data{i}.all_songs.(transitions{j}).(analysis_type)),'Marker','.','MarkerSize',27,'Color','k');
            catch err
                continue
            end
        end
        
        % put in baseline lines (specifically for lesion experimnets)  aLSO pUT IN VERTICAL LINES FOR important dates (e.g. lesions)
        if isfield(all_days_all_analysis.summary_of_experiment,'inter_lesion_days')==1;
            disp('adding line for baseline value');
            baseline_values_temp=[];
            for i=1:all_days_all_analysis.summary_of_experiment.inter_lesion_days(1);
                baseline_values_temp=[baseline_values_temp all_days_all_analysis.data{i}.all_songs.transitions{j}.(analysis_type)'];
            end
            baseline_mean=median(baseline_values_temp);
            baseline_std=std(baseline_values_temp);
            line(xlim, [baseline_mean baseline_mean],'Color','r','LineWidth',0.4); % mean lines
            line(xlim, [baseline_mean+baseline_std baseline_mean+baseline_std],'LineStyle','--','Color',[0.7 0.1 0.1],'LineWidth',0.3); % variance lines
            line(xlim, [baseline_mean-baseline_std baseline_mean-baseline_std],'LineStyle','--','Color', [0.7 0.1 0.1],'LineWidth',0.3);
            
            disp('adding lines for lesion days');
            % lesion 1
            for i=1:length(all_days_all_analysis.summary_of_experiment.inter_lesion_days);
                
                line([all_days_all_analysis.summary_of_experiment.inter_lesion_days(i)+0.1, ...
                    all_days_all_analysis.summary_of_experiment.inter_lesion_days(i)+0.1],ylim,'Color',[0.2 0.6 0.2],'LineWidth',1.8);
            end
        end
        
        % BASELINE AND IMPORTANT DATES FOR WN EXPERIMENTS
        if isfield(all_days_all_analysis.summary_of_experiment,'WN_baseline_days')==1;
            disp('adding line for baseline value');
            baseline_values_temp=[];
            for i=1:all_days_all_analysis.summary_of_experiment.WN_baseline_days;
                baseline_values_temp=[baseline_values_temp all_days_all_analysis.data{i}.all_songs.(transitions{j}).(analysis_type)'];
            end
            baseline_mean=median(baseline_values_temp);
            baseline_std=std(baseline_values_temp);
            line(xlim, [baseline_mean baseline_mean],'Color','r','LineWidth',0.4); % mean lines
            line(xlim, [baseline_mean+baseline_std baseline_mean+baseline_std],'LineStyle','--','Color',[0.7 0.1 0.1],'LineWidth',0.3); % variance lines
            line(xlim, [baseline_mean-baseline_std baseline_mean-baseline_std],'LineStyle','--','Color', [0.7 0.1 0.1],'LineWidth',0.3);
            
            disp('adding lines for WN on, driving--> consolid, and off days');
            line([all_days_all_analysis.summary_of_experiment.WN_baseline_days-0.5, ...
                all_days_all_analysis.summary_of_experiment.WN_baseline_days-0.5],ylim,'Color',[0.2 0.6 0.2],'LineWidth',1.8);% WN start
            
            line([all_days_all_analysis.summary_of_experiment.WN_baseline_days+all_days_all_analysis.summary_of_experiment.WN_driving_days-0.5, ...
                all_days_all_analysis.summary_of_experiment.WN_baseline_days+all_days_all_analysis.summary_of_experiment.WN_driving_days-0.5],ylim,'Color',[0.2 0.6 0.2],'LineWidth',1.8); % WN driving--> consolidation
            
            line([all_days_all_analysis.summary_of_experiment.WN_baseline_days+all_days_all_analysis.summary_of_experiment.WN_driving_days+all_days_all_analysis.summary_of_experiment.WN_consolidation_days-0.5, ...
                all_days_all_analysis.summary_of_experiment.WN_baseline_days+all_days_all_analysis.summary_of_experiment.WN_driving_days+all_days_all_analysis.summary_of_experiment.WN_consolidation_days-0.5],ylim,'Color',[0.2 0.6 0.2],'LineWidth',1.8);  % WN end
        end
        
        title([analysis_type ' over days for transition: ' transitions{j} '; dots and lines are medians']); xlabel('days');
    end
    
end

%% for individual syllable analyses (plotting across days)
analysis_type='pitch';
syllables = 'fhi';
first_day_num=datenum(all_days_all_analysis.parameters.first_day);


for j=1:length(syllables);
    figure(j); hold on;
    for i=1:length(all_days_all_analysis.data); % number of days
        try
            scatter(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type)(:,1)-first_day_num,all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type)(:,2),'b');
        catch err
            continue
        end
    end
    
    % Put in medians, std
    for i=1:length(all_days_all_analysis.data); % number of days
        try
            errorbar(median(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type)(:,1)-first_day_num),median(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type)(:,2)),...
                std(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type)(:,2)),'Marker','.','MarkerSize',27,'Color','k');
        catch err
            continue
        end
    end
    
    % put in baseline lines (specifically for lesion experimnets, and PUT IN VERTICAL LINES FOR important dates (e.g. lesions)
    
    if isfield(all_days_all_analysis.summary_of_experiment,'inter_lesion_days')==1;
        disp('adding line for baseline value');
        baseline_values_temp=[];
        for i=1:all_days_all_analysis.summary_of_experiment.inter_lesion_days(1);
            baseline_values_temp=[baseline_values_temp all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type)(:,2)'];
        end
        baseline_mean=median(baseline_values_temp);
        baseline_std=std(baseline_values_temp);
        line(xlim, [baseline_mean baseline_mean],'Color','r','LineWidth',0.4); % mean lines
        line(xlim, [baseline_mean+baseline_std baseline_mean+baseline_std],'LineStyle','--','Color',[0.7 0.1 0.1],'LineWidth',0.3); % variance lines
        line(xlim, [baseline_mean-baseline_std baseline_mean-baseline_std],'LineStyle','--','Color', [0.7 0.1 0.1],'LineWidth',0.3);
        
        disp('adding lines for lesion days');
        % lesion 1
        for i=1:length(all_days_all_analysis.summary_of_experiment.inter_lesion_days);
            
            line([all_days_all_analysis.summary_of_experiment.inter_lesion_days(i)+0.1, ...
                all_days_all_analysis.summary_of_experiment.inter_lesion_days(i)+0.1],ylim,'Color',[0.2 0.6 0.2],'LineWidth',1.8);
        end
    end
    % MODIFY BELOW FROM TRANSITION TO SYLLABLE INPUTS
%     % BASELINE AND IMPORTANT DATES FOR WN EXPERIMENTS
%     if isfield(all_days_all_analysis.summary_of_experiment,'WN_baseline_days')==1;
%         disp('adding line for baseline value');
%         baseline_values_temp=[];
%         for i=1:all_days_all_analysis.summary_of_experiment.WN_baseline_days;
%             baseline_values_temp=[baseline_values_temp all_days_all_analysis.data{i}.all_songs.(transitions{j}).(analysis_type)'];
%         end
%         baseline_mean=median(baseline_values_temp);
%         baseline_std=std(baseline_values_temp);
%         line(xlim, [baseline_mean baseline_mean],'Color','r','LineWidth',0.4); % mean lines
%         line(xlim, [baseline_mean+baseline_std baseline_mean+baseline_std],'LineStyle','--','Color',[0.7 0.1 0.1],'LineWidth',0.3); % variance lines
%         line(xlim, [baseline_mean-baseline_std baseline_mean-baseline_std],'LineStyle','--','Color', [0.7 0.1 0.1],'LineWidth',0.3);
%         
%         disp('adding lines for WN on, driving--> consolid, and off days');
%         line([all_days_all_analysis.summary_of_experiment.WN_baseline_days-0.5, ...
%             all_days_all_analysis.summary_of_experiment.WN_baseline_days-0.5],ylim,'Color',[0.2 0.6 0.2],'LineWidth',1.8);% WN start
%         
%         line([all_days_all_analysis.summary_of_experiment.WN_baseline_days+all_days_all_analysis.summary_of_experiment.WN_driving_days-0.5, ...
%             all_days_all_analysis.summary_of_experiment.WN_baseline_days+all_days_all_analysis.summary_of_experiment.WN_driving_days-0.5],ylim,'Color',[0.2 0.6 0.2],'LineWidth',1.8); % WN driving--> consolidation
%         
%         line([all_days_all_analysis.summary_of_experiment.WN_baseline_days+all_days_all_analysis.summary_of_experiment.WN_driving_days+all_days_all_analysis.summary_of_experiment.WN_consolidation_days-0.5, ...
%             all_days_all_analysis.summary_of_experiment.WN_baseline_days+all_days_all_analysis.summary_of_experiment.WN_driving_days+all_days_all_analysis.summary_of_experiment.WN_consolidation_days-0.5],ylim,'Color',[0.2 0.6 0.2],'LineWidth',1.8);  % WN end
%     end
    
    title([analysis_type ' over days for syllable: ' syllables(j) '; dots and lines are medians']); xlabel('days');
end

%% below for PITCH

if strcmp(analysis_type,'pitch')==1;
    
    
    for j=1:length(syllables);
        figure(j); hold on;
        % this is to make day 1 = day 0.
        
        NumToAddToAllDays= -mean(all_days_all_analysis.data{1}.all_songs.(syllables(j)).(analysis_type).FF(:,1));
        
        for i=1:length(all_days_all_analysis.data); % number of days
            try
                scatter(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type).FF(:,1)+NumToAddToAllDays,all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type).FF(:,2),'b');
            catch err
                continue
            end
        end
        
        % Put in medians, std
    for i=1:length(all_days_all_analysis.data); % number of days
        try
            errorbar(median(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type).FF(:,1))+NumToAddToAllDays,median(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type).FF(:,2)),...
                std(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type).FF(:,2)),'Marker','.','MarkerSize',27,'Color','k');
        catch err
            continue
        end
    end
    
    % put in baseline lines (specifically for lesion experimnets, and PUT IN VERTICAL LINES FOR important dates (e.g. lesions)
    
    if isfield(all_days_all_analysis.summary_of_experiment,'inter_lesion_days')==1;
        disp('adding line for baseline value');
        baseline_values_temp=[];
        for i=1:all_days_all_analysis.summary_of_experiment.inter_lesion_days(1);
            baseline_values_temp=[baseline_values_temp all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type).FF(:,2)'];
        end
        baseline_mean=median(baseline_values_temp);
        baseline_std=std(baseline_values_temp);
        line(xlim, [baseline_mean baseline_mean],'Color','r','LineWidth',0.4); % mean lines
        line(xlim, [baseline_mean+baseline_std baseline_mean+baseline_std],'LineStyle','--','Color',[0.7 0.1 0.1],'LineWidth',0.3); % variance lines
        line(xlim, [baseline_mean-baseline_std baseline_mean-baseline_std],'LineStyle','--','Color', [0.7 0.1 0.1],'LineWidth',0.3);
        
        disp('adding lines for lesion days');
        % lesion 1
        %         for i=1:length(all_days_all_analysis.summary_of_experiment.inter_lesion_days);
        %             line([all_days_all_analysis.summary_of_experiment.inter_lesion_days(i)+0.1, ...
        %                 all_days_all_analysis.summary_of_experiment.inter_lesion_days(i)+0.1],ylim,'Color',[0.2 0.6 0.2],'LineWidth',1.8);
        %         end
        for i=1:length(all_days_all_analysis.summary_of_experiment.inter_lesion_days); % USE THE GREEN VERSION ABOVE IF YOU KEEP AS DAYS IN BETWEEN LESIONS
            absolute_lesion_day= sum(all_days_all_analysis.summary_of_experiment.inter_lesion_days(1:i)); % i.e. 3 pre-lesion days implies lesion 1 on day 3 (since day 1 is really 0)
            line([absolute_lesion_day+0.1, ...
                absolute_lesion_day+0.1],ylim,'Color',[0.2 0.6 0.2],'LineWidth',1.8);
        end
    end
    % MODIFY BELOW FROM TRANSITION TO SYLLABLE INPUTS
    %     % BASELINE AND IMPORTANT DATES FOR WN EXPERIMENTS
    %     if isfield(all_days_all_analysis.summary_of_experiment,'WN_baseline_days')==1;
    %         disp('adding line for baseline value');
    %         baseline_values_temp=[];
    %         for i=1:all_days_all_analysis.summary_of_experiment.WN_baseline_days;
    %             baseline_values_temp=[baseline_values_temp all_days_all_analysis.data{i}.all_songs.(transitions{j}).(analysis_type)'];
%         end
%         baseline_mean=median(baseline_values_temp);
%         baseline_std=std(baseline_values_temp);
%         line(xlim, [baseline_mean baseline_mean],'Color','r','LineWidth',0.4); % mean lines
%         line(xlim, [baseline_mean+baseline_std baseline_mean+baseline_std],'LineStyle','--','Color',[0.7 0.1 0.1],'LineWidth',0.3); % variance lines
%         line(xlim, [baseline_mean-baseline_std baseline_mean-baseline_std],'LineStyle','--','Color', [0.7 0.1 0.1],'LineWidth',0.3);
%         
%         disp('adding lines for WN on, driving--> consolid, and off days');
%         line([all_days_all_analysis.summary_of_experiment.WN_baseline_days-0.5, ...
%             all_days_all_analysis.summary_of_experiment.WN_baseline_days-0.5],ylim,'Color',[0.2 0.6 0.2],'LineWidth',1.8);% WN start
%         
%         line([all_days_all_analysis.summary_of_experiment.WN_baseline_days+all_days_all_analysis.summary_of_experiment.WN_driving_days-0.5, ...
%             all_days_all_analysis.summary_of_experiment.WN_baseline_days+all_days_all_analysis.summary_of_experiment.WN_driving_days-0.5],ylim,'Color',[0.2 0.6 0.2],'LineWidth',1.8); % WN driving--> consolidation
%         
%         line([all_days_all_analysis.summary_of_experiment.WN_baseline_days+all_days_all_analysis.summary_of_experiment.WN_driving_days+all_days_all_analysis.summary_of_experiment.WN_consolidation_days-0.5, ...
%             all_days_all_analysis.summary_of_experiment.WN_baseline_days+all_days_all_analysis.summary_of_experiment.WN_driving_days+all_days_all_analysis.summary_of_experiment.WN_consolidation_days-0.5],ylim,'Color',[0.2 0.6 0.2],'LineWidth',1.8);  % WN end
%     end
    
    title([analysis_type ' over days for syllable: ' syllables(j) '; dots and lines are medians']); xlabel('days');
end
end
    

%% to plot histogram of all vocalization durations.
day1=all_days_all_analysis.summary_of_experiment.inter_lesion_days(3);
day2=all_days_all_analysis.summary_of_experiment.inter_lesion_days(3)+1;
nbins=100;

figure;
hist(all_days_all_analysis.data{day1}.all_songs.all_vocalization_stats.durations_all_songs{day1},nbins);
figure;
hist(all_days_all_analysis.data{day2}.all_songs.all_vocalization_stats.durations_all_songs{day2},nbins);



%% To plot one variable against another (e.g. is my entropy increase real or does it just reflect changes in amplitude?)
analysis_type_one='amplitude'; % x axis
analysis_type_two='entropy'; % y axis
% syllables='cdabjklm';
syllables=all_days_all_analysis.parameters.syllables_seq_func;
syllables='fk';
lin_reg_on_or_off='off';
type_of_manipulation='WN';


switch type_of_manipulation;
    case 'WN'
        baseline_days=all_days_all_analysis.summary_of_experiment.WN_baseline_days;
        important_days=[all_days_all_analysis.summary_of_experiment.WN_baseline_days all_days_all_analysis.summary_of_experiment.WN_baseline_days+all_days_all_analysis.summary_of_experiment.WN_driving_days];
    case 'lesion'
        baseline_days=all_days_all_analysis.summary_of_experiment.inter_lesion_days(1);
        important_days=all_days_all_analysis.summary_of_experiment.inter_lesion_days;
end
    
    
% VERSION 1: look at all renditions for specific days (same plot)
for j=1:length(syllables);
    figure; hold on
    for i=1:baseline_days;
        try
            if strcmp(lin_reg_on_or_off,'on')==1;
                [r,m,b]=regression(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_one)(:,2), all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_two)(:,2),'one');
                plot(min(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_one)(:,2)):max(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_one)(:,2)),b+m*[min(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_one)(:,2)):max(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_one)(:,2))],'b');
            end
            scatter(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_one)(:,2), all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_two)(:,2),'b');
        catch err
            continue
        end
        
    end
    
    for i=important_days(2)-25:important_days(2)-15;
        try
            if strcmp(lin_reg_on_or_off,'on')==1;
                [r,m,b]=regression(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_one)(:,2), all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_two)(:,2),'one');
                plot(min(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_one)(:,2)):max(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_one)(:,2)),b+m*[min(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_one)(:,2)):max(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_one)(:,2))],'r');
            end
            scatter(all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_one)(:,2), all_days_all_analysis.data{i}.all_songs.(syllables(j)).(analysis_type_two)(:,2),'r');
        catch err
            continue
        end
    end
    title(['individual renditions of syllable ' syllables(j) '. ' analysis_type_two ' vs. ' analysis_type_one '. Pre=blue Post=red'])
    xlabel(analysis_type_one); ylabel(analysis_type_two);
end

% to save - incomplete
cd(['/bluejay2/lucas/birds/' all_days_all_analysis.parameters.name_of_bird '/all_days_all_analysis/PLOT'])

%----------------------------------------------------------------
% VERSION 2: to plot across days (one scatter point per day)

num_of_days=length(all_days_all_analysis.data);
divisions=1/num_of_days;

for ii=1:length(syllables);
    figure; hold on; title(['mean per day of syllable ' syllables(ii) '. ' analysis_type_two ' vs. ' analysis_type_one '. Pre=blue Post=green to red (chronological)'])
    for jj=1:num_of_days;
        try
            mean_per_day.(analysis_type_one){jj}=mean(all_days_all_analysis.data{jj}.all_songs.(syllables(ii)).(analysis_type_one)(:,2));
            mean_per_day.(analysis_type_two){jj}=mean(all_days_all_analysis.data{jj}.all_songs.(syllables(ii)).(analysis_type_two)(:,2));
            if jj<=baseline_days;
                plot(mean_per_day.(analysis_type_one){jj},mean_per_day.(analysis_type_two){jj},'.','MarkerSize',15,'Color','b')
            elseif jj>baseline_days;
                plot(mean_per_day.(analysis_type_one){jj},mean_per_day.(analysis_type_two){jj},'.','MarkerSize',15,'Color',jj*[divisions 0 0]+[0 1 0]-jj*[0 divisions 0])
            else
                disp('error')
            end
        catch
        end
    end
end

% FIND MEAN ACROSS DAYS (e.g. early, late learning)


%% plotting WN hit rate over all things, see bk51bk59 analysis script for details.

